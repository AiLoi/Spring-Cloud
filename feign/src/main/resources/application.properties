
spring.application.name=FEIGN-CONSUMER

server.port=6060

eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}

#eureka.instance.instance-id=${spring.application.name}:${random.int}

#分别向两台Eureka服务器上注册自己
eureka.client.service-url.defaultZone=http://slave1:8761/eureka/,http://slave2:8762/eureka/


#feign对ribbon的配置
FIRST-SERVICE-PROVIDER.ribbon.ConnectTimeout=500
FIRST-SERVICE-PROVIDER.ribbon.ReadTimeout=2000

FIRST-SERVICE-PROVIDER.ribbon.OkToRetryOnAllOperations=true
#最大实例访问次数
FIRST-SERVICE-PROVIDER.ribbon.MaxAutoRetriesNextServer=2
#feign最大重试次数
FIRST-SERVICE-PROVIDER.ribbon.MaxAutoRetries=1

first-service-provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

#feign对Hystrix的配置

#全局配置，对全局超时进行配置
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000

#feign默认关闭 hystrix
feign.hystrix.enabled=true

#指令命令配置，采用hystrix.command.<commandKey>作为前缀。 而<commandKey>默认情况下会采用Feign客户端的方法名作为标识。
#同样的方法名会共享Hystrix的配置，可以重写Feign.Builder的实现，并在应用主类中创建它的实例来覆盖自动化配置HystrixFeign.Builder实现
hystrix.command.hello.execution.isolation.thread.timeoutInMilliseconds=5000

#Spring Cloud Feign 支持对请求与响应进行GZip压缩，以减少通信过程中的性能损耗
feign.compression.request.enabled=true
feign.compression.response.enabled=true

#同时还能对请求压缩做一些更细致的设置，比如下面的配置内容指定了压缩请求数据类型，并限制请求压缩的大小限制。只有超过这个限制才会被压缩
#这里均为默认值
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=2048

#日志配置
logging.level.com.feign.service.PersonService=DEBUG

